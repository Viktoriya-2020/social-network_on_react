{"version":3,"sources":["hok/WithAuthReirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/wall.jpg","assets/images/avatar.jpg","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHook.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForReddirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","statusUser","status","setStatus","useEffect","onDoubleClick","onBlur","updateUserStatus","autoFocus","value","onChange","e","currentTarget","ProfileInfo","profile","className","style","container","content_wall","src","wallThoto","alt","ava","photos","large","avatar","dickrip","fullName","ProfileStatusWithHook","newPost","Preloader","Post","item","messege","likesCount","MyPosts","memo","postsElements","posts","map","p","key","id","messeges","s","inform","postForm","PostReduxForm","onSubmit","values","addPost","maxLength15","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContainer","profilePage","newPostText","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","compose","withRouter","usersPage"],"mappings":"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","file":"static/js/3.d4b44459.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForReddirect = (state) =>({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render(){\r\n            if(!this.props.isAuth) return <Redirect to = '/login'/>\r\n                return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect( mapStateToPropsForReddirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\n ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfileInfo_container__zmQ-g\",\"content_wall\":\"ProfileInfo_content_wall__1fTM5\",\"ava\":\"ProfileInfo_ava__19jJT\",\"dickrip\":\"ProfileInfo_dickrip__dqxsv\",\"newPost\":\"ProfileInfo_newPost__1J3LC\",\"posts\":\"ProfileInfo_posts__3s6WM\"};","module.exports = __webpack_public_path__ + \"static/media/wall.6be5f38c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.c07a220f.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postForm\":\"MyPosts_postForm__qa1Gq\",\"posts\":\"MyPosts_posts__14VNk\",\"inform\":\"MyPosts_inform__F1YTj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3aFCN\"};","import React from 'react';\r\nimport s from './ProfileStatus.module.css'\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.statusUser,\r\n    }\r\n    activateEditMode = () =>{\r\n        this.setState ({\r\n            editMode: true,\r\n        })\r\n    }\r\n    deactivateEditMode = () =>{\r\n        this.setState ({\r\n            editMode: false,\r\n        \r\n        })\r\n        this.props.updateUserStatus(this.state.status)\r\n    }\r\n    onStatusChange = (e) =>{\r\n        this.setState ({\r\n            status: e.currentTarget.value,\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps,prevState){\r\n       if (prevProps.statusUser !== this.props.statusUser){\r\n           this.setState({\r\n               status: this.props.statusUser,\r\n           })\r\n       }\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick = {this.activateEditMode}>{\r\n                    !this.props.statusUser?  \"status\" \r\n                    :this.props.statusUser}</span>\r\n                </div>}\r\n                { this.state.editMode &&\r\n                <div>\r\n                    <input autoFocus={true}  onBlur={this.deactivateEditMode}  value={this.state.status} \r\n                    onChange={this.onStatusChange} />\r\n                </div>}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport s from './ProfileStatus.module.css'\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.statusUser);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.statusUser)\r\n    }, [props.statusUser])\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n\r\n        props.updateUserStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{\r\n                        !props.statusUser ? \"status\"\r\n                            : props.statusUser}</span>\r\n                </div>}\r\n            {editMode &&\r\n                <div>\r\n                    <input onBlur={deactivateEditMode} autoFocus={true} value={status}\r\n                        onChange={onStatusChange} />\r\n                </div>}\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport style from './ProfileInfo.module.css'\r\nimport wallThoto from '../../../assets/images/wall.jpg';\r\nimport avatar from '../../../assets/images/avatar.jpg';\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHook';\r\n\r\nconst ProfileInfo = ({ profile, statusUser, updateUserStatus, ...props }) => {\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <div >\r\n      <div className={style.container}>\r\n        <div className={style.content_wall}>\r\n          <img src={wallThoto} alt='wall' />\r\n        </div>\r\n        <div className={style.ava}>\r\n          <img src={!profile.photos.large ? avatar : profile.photos.large} />\r\n        </div>\r\n        <div className={style.dickrip}>\r\n          <h2>{profile.fullName}</h2>\r\n          <ProfileStatusWithHooks statusUser={statusUser} updateUserStatus={updateUserStatus} />\r\n        </div>\r\n        <div className={style.newPost}><h5>New Post</h5></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport style from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return(\r\n      \r\n            \r\n                      <div className={style.item}>\r\n                          <img src='https://perfecto-web.pro/uploads/uifaces/ui-3.jpg' />\r\n                              <span>{props.messege}</span>        \r\n                              <p><b>LIKE</b> {props.likesCount}</p>\r\n                      </div>\r\n                      \r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validator';\r\nimport { Textarea } from '../../../common/FormsControls';\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n  let addPost = (values) => {\r\n\r\n    props.addPost(values.newPost);\r\n  }\r\n\r\n  let postsElements = props.posts.map(p => <Post key={p.id} messege={p.messeges} likesCount={p.likesCount} />)\r\n  return (\r\n    <div className={s.inform}>\r\n      <div className={s.postForm}><PostReduxForm onSubmit={addPost} /></div>\r\n      <h3>My posts</h3>\r\n      <div className={s.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n});\r\nconst maxLength15 = maxLengthCreator(15);\r\nlet PostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field component={Textarea} name='newPost' placeholder='enter your post' validate={[required, maxLength15]} />\r\n      <button>Add</button>\r\n    </form>\r\n  )\r\n}\r\nlet PostReduxForm = reduxForm({ form: 'post' })(PostForm)\r\n\r\nexport default MyPosts;","\r\nimport {addPostActionCreator } from '../../../Redux/profile-reduser';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n   posts: state.profilePage.posts,\r\n   newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\nlet mapDispatchToProps =(dispatch) => {\r\n  return {\r\n    \r\n    addPost: (newPost) => {\r\n      dispatch(addPostActionCreator(newPost));\r\n    }\r\n  }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer ;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n  //console.log('test =>',  props.upDatePostText )\r\n  return (\r\n    <div >\r\n      <ProfileInfo profile={props.profile} statusUser={props.statusUser} updateUserStatus={props.updateUserStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { getUserProfile } from '../../Redux/profile-reduser';\r\nimport { getUserStatus, updateUserStatus } from '../../Redux/users-reducer'\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { WithAuthRedirect } from '../../hok/WithAuthReirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push('/login')\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId)\r\n    this.props.getUserStatus(userId)\r\n  }\r\n  render() {\r\n    return (\r\n      <div >\r\n        <Profile {...this.props} profile={this.props.profile} statusUser={this.props.status} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n\r\n  profile: state.profilePage.profile,\r\n  status: state.usersPage.status,\r\n  authorizedUserId: state.auth.id,\r\n  isAuth: state.auth.isAuth\r\n\r\n});\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, { getUserProfile, getUserStatus, updateUserStatus }),\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}