{"version":3,"sources":["hok/WithAuthReirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Messege/Messege.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForReddirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","s","dialog","active","name","Messege","massege","messeges","maxLength40","maxLengthCreator","DialogsMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","messegesElements","m","style","gialogs","dialogs_names","masseges","addtext","values","addMessage","messageBody","compose","dispatch","addMessageActionCreator"],"mappings":"gPAIIA,EAA8B,SAACC,GAAD,MAAW,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,iLAGnC,OAAIC,KAAKC,MAAMN,OACJ,kBAACG,EAAcE,KAAKC,OADD,kBAAC,IAAD,CAAUC,GAAK,eAHV,GACXC,IAAML,WAOtC,OADqCM,YAASX,EAATW,CAAsCL,K,oBCd/EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,wBAAwB,QAAU,2B,+FCezOC,EAZI,SAACN,GAClB,IAAIO,EAAO,YAAcP,EAAMQ,GAC/B,OACE,yBAAKC,UAAWC,IAAEC,OAAO,IAAID,IAAEE,QAC3B,kBAAC,IAAD,CAASX,GAAIM,GAAQP,EAAMa,QCQpBC,EAVC,SAACd,GACf,OACE,yBAAKS,UAAWC,IAAEK,SACZf,EAAMgB,W,kCCgCVC,EAAcC,YAAiB,IAS/BC,EAA0BC,YAAU,CAACC,KAAK,cAAhBD,EARL,SAACpB,GAC1B,OACE,0BAAMsB,SAAUtB,EAAMuB,cAClB,6BAAK,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GAAcJ,KAAK,cAAcgB,YAAY,sBACnG,6BAAK,4CAMEC,EA1CC,SAAC9B,GAGX,IAKC+B,EAAkB/B,EAAMgC,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAML,GAAI2B,EAAE3B,QACrF4B,EAAmBpC,EAAMgC,YAAYhB,SAASkB,KAAI,SAAAG,GAAC,OAAI,kBAAC,EAAD,CAASrB,SAAUqB,EAAErB,SAAUR,GAAI6B,EAAE7B,QAG/F,OAEE,yBAAMC,UAAY6B,IAAMC,SACrB,yBAAK9B,UAAY6B,IAAME,eACnBT,GAEJ,yBAAKtB,UAAY6B,IAAMG,UACnBL,GAGJ,8BACA,yBAAK3B,UAAY6B,IAAMI,SACvB,kBAACvB,EAAD,CAAyBG,SArBX,SAACqB,GAChB3C,EAAM4C,WAAWD,EAAOE,mB,wBCShBC,sBAAQlD,IAAkBO,aAdpB,SAACV,GACpB,MAAO,CACJuC,YAAavC,EAAMuC,gBAIA,SAACe,GACvB,MAAO,CAEJH,WAAY,SAACC,GACVE,EAAUC,YAAwBH,SAI3BC,CAAyEhB","file":"static/js/4.468921c2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForReddirect = (state) =>({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render(){\r\n            if(!this.props.isAuth) return <Redirect to = '/login'/>\r\n                return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect( mapStateToPropsForReddirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\n ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gialogs\":\"Dialogs_gialogs__2fxWO\",\"dialogs_names\":\"Dialogs_dialogs_names__3yB_R\",\"dialog\":\"Dialogs_dialog__a2x5w\",\"masseges\":\"Dialogs_masseges__3556w\",\"massege\":\"Dialogs_massege__3voaV\",\"active\":\"Dialogs_active__368Yz\",\"addtext\":\"Dialogs_addtext__3-f57\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id\r\n  return(\r\n    <div className={s.dialog+' '+s.active}>\r\n        <NavLink to={path} >{props.name}</NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\n\r\n\r\nconst Messege = (props) =>{\r\n  return(\r\n    <div className={s.massege}>\r\n         {props.messeges}    \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Messege;","import React from 'react';\r\nimport style from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Messege from './Messege/Messege';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../../common/FormsControls';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validator';\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n   \r\n\r\n      let addMessage = (values) => {\r\n        props.addMessage(values.messageBody);\r\n      }\r\n\r\n    \r\n   let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} id={d.id} />);\r\n   let messegesElements = props.dialogsPage.messeges.map(m => <Messege messeges={m.messeges} id={m.id}/>);\r\n\r\n    \r\n    return(\r\n\r\n      <div  className={ style.gialogs}> \r\n         <div className={ style.dialogs_names}>\r\n            {dialogsElements}\r\n          </div>\r\n         <div className={ style.masseges}>\r\n            {messegesElements}\r\n           \r\n         </div>\r\n         <div ></div>\r\n         <div className={ style.addtext}>\r\n         <DialogsMessageReduxForm onSubmit={addMessage} />\r\n            </div>\r\n         \r\n      </div>\r\n      \r\n    );\r\n}\r\nconst maxLength40 = maxLengthCreator(40);\r\nconst DialogsMessageForm = (props) => {\r\n  return(\r\n    <form onSubmit={props.handleSubmit}>\r\n        <div><Field component={Textarea} validate={[required, maxLength40]} name='messageBody' placeholder='write message...' /></div>\r\n        <div><button>Add</button></div>\r\n    </form>\r\n  )\r\n}\r\nconst DialogsMessageReduxForm = reduxForm({form:'newMessage'})(DialogsMessageForm)\r\n\r\nexport default Dialogs;","\r\nimport { addMessageActionCreator } from '../../Redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { WithAuthRedirect } from '../../hok/WithAuthReirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      dialogsPage: state.dialogsPage,\r\n    \r\n   }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      \r\n      addMessage: (messageBody) => {\r\n         dispatch( addMessageActionCreator(messageBody));\r\n      }\r\n   }\r\n}\r\nexport default  compose(WithAuthRedirect, connect( mapStateToProps, mapDispatchToProps))(Dialogs);\r\n"],"sourceRoot":""}